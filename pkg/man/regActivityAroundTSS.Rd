% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/DataIntegRFunctions.R
\name{regActivityAroundTSS}
\alias{regActivityAroundTSS}
\title{Identify regulatory regions around provided TSSes}
\usage{
regActivityAroundTSS(RegRegionActivity, TSS, upstream = 5e+05,
  downstream = 5e+05, mc.cores = 10)
}
\arguments{
\item{TSS}{a GRanges object output from \code{bwToGeneExp} that
contains the TSS location and associated gene expression values 
per cell type or condition as meta data. Each row should have a
"name" and "name2" columns for unique id or name/symbol for the
gene which the TSS is associated with. One is Ensembl id 
and the other could be used for the gene symbol. Other metadata
column names should represent sample names/ids and should
match the GRanges object provided via regActivity argument.}

\item{upstream}{number of basepairs upstream from TSS to look for
regulatory regions. default 500kb}

\item{downstream}{number of basepairs downstream from TSS to look for 
regulatory regions. default 500kb}

\item{regActivity}{a GRanges object output from \code{regActivity}
function}
}
\value{
a GRangesList object per gene that contain location of TSS
and regulatory regions around that gene. Names for the GRangesList
are unique gene ids/names. 
Metadata for a GRanges object in the list represents regulatory 
activity and gene expression accross the same samples. 
The GRanges objects have the following metadata columns:
 1. featureType: either "gene" or "regulatory"
 2. name: name/id for gene and enhancers. Gene name could be id from a database
         enhancer name should be in the format as follows "chr:start-end"
 3. name2: a secondary name for the feature, such as gene symbol "PAX6" etc. not
   necessary for enhancers could be NA
 4. other columns: numeric values for gene expression or regulatory actvity.
   Column names represent sample names/ids.

#@examples 
# load("~/TSS.RData")
# load("~/regActivity.RData")
# regActivityAroundTSS(regActivity,TSS,upstream=500000,downstream=500000)


 #load(file="~/LargeregRegions.RData")
 #RoadmapH3K4me1 <- readRDS(
 #"/data/akalin/Projects/AAkalin_reg2gene/Results/regActivity/Roadmap_H3K4me1_meanratio.rds")
 #RoadmapRNASeq <- readRDS(
 #"/data/akalin/Projects/AAkalin_reg2gene/Results/bwToGeneExp/Roadmap_RNASeq_meanratio.rds")

   #regActivityAroundTSS(RegRegionActivity = RoadmapH3K4me1, TSS = RoadmapRNASeq[1:10])


#RegRegionActivity <- readRDS(pathRegActivity)
#TSS <- readRDS(pathTSS)[1:10]
#Method <- basename(pathRegActivity)
#mc.cores=25
# regActivityAroundTSS(RegRegionActivity, 
 #                                 TSS,
 #                                downstream=1000000,
 #                                 upstream=1000000,
 #                                 mc.cores)
}
\description{
The function identifies the regulatory regions around provided
TSSes over a pre-defined window. The function needs a GRanges
object for TSSes with meta-columns corresponding to expression
levels in different cell types or conditions.
}
\details{
only enhancers located within (+/-)upstream/downstream of TSS 
are identified,extracted and reported in output (together with info
about gene expression). Sample id's (corresponding to the cell types 
or conditions) are included only if both, 1) gene expression values and
2) quantified regulatory activity are available in TSS and 
regActivity objects. Non-overlapping cell types are excluded.
}
