% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/annotationF.R
\name{annotateGenomicRegions}
\alias{annotateGenomicRegions}
\title{Hierarchically annotates input GRanges object with corresponding genes}
\usage{
annotateGenomicRegions(genomicRegions, annotations, upstream = 1000,
  downstream = 1000, distance = 1e+06, identified = TRUE, ...)
}
\arguments{
\item{genomicRegions}{GRanges object that contains the windows of interest. 
It could be enhancers, promoters, CpG islands, ChIP-Seq or DNase-Seq peaks...}

\item{annotations}{GRanges which contains info about genes of interest, or
GInteractions object which stores regulatory regions - gene associations.
Info about gene names should be stored as a meta-data. 
IMPORTANT! 
If GInteractions object is used as an input then, anchor1 needs 
to be regulatory region, whereas anchor2 is location of gene/TSS.
If GRanges object is used as an input, then input genomicRegions are 
tested whether they are 
located in the vicinity of TSS of genes stored in this object, and if yes 
the corresponding gene is reported. Otherwise, hierarchical association
of input GRanges object with corresponding genes is performed.}

\item{upstream}{number of basepairs upstream from TSS to look for
input genomicRegions. default 1000}

\item{downstream}{number of basepairs downstream from TSS to look for 
input genomicRegions. default 1000}

\item{distance}{(default 1Mb). Maximal allowed distance between genes TSS and
input peak. Used in the 3rd step of the association procedure (genomic 
regions is associated to the closest gene if the distance between these 
two locations is smaller than prediefined distance threshold.)}

\item{identified}{(default TRUE). 
If TRUE, report genomic regions AND corresponding genes;
If FALSE, report regions for which info about gene is missing.}
}
\value{
A \code{\link[InteractionSet]{GInteractions}} object that contains
info about genes (location+meta-data) annotated with regions of interest.
Anchor1 corresponds to the queried genomicRegions location, whereas anchor2
corresponds to gene location.  It additionaly reports whether genomic region
overlapped with promoter or enhancer region of the annotated gene, or an
association was assessed based on the proximity to the gene (possible values
"enhancer","promoter","nearestGene").
}
\description{
This function either annotates input regions to their nearby genes or it 
hierarchical runs association procedure (when GIneraction object is used as
an input) as follows: promoters,enhancers, nearby genes.
}
\details{
This function annotates input genomicRegions to the promoter 
regions of genes (and correspondingly to that gene) if only location of genes
(as GRanges object) and of genomicRegions is provided. 
Meaning that, if the input genomicRegions is located within +/- 
upstream/downstream distance from TSS of a gene, then this gene is annotated
to the queried region.
When GIneraction object is used as an input, then hierarchical association
procedure is runned as follows: promoters,enhancers, nearby genes, eg:
1) genomic regions of interest are first considered to be 
promoters and annotated with nearby genes if they are located within a 
certain distance from TSS of nerbay gene (default +/-1000bp); otherwise
2) remaning genes are overlapped with enhancer regions, and genes annotated
to that enhancer regions are reported, 
3) if no overlap with either promoters nor enhancers is identified, then 
closest gene is reported if it is located within 1Mb
4) if no gene located within 1Mb has been identified then, this region is 
filtered out.
IMPORTANT! 
Anchor1 in GInteractions object needs to be regulatory region, whereas
anchor2 is the location of gene/TSS.
}
\examples{
# CREATE genomicRegions test object

library(GenomicRanges)
library(InteractionSet)

genomicRegions <- GRanges(c("chr1:1-2", # 1. overlap prom
                            "chr2:1-2",  # 2. overlap enh
                            "chr3:1-2", # 3. overlap tss +/- 1,000,000
                            "chr4:1-2")) # 4. do not overlap tss +/- 1,000,000

# CREATE GInteractions test object
annotationsEnh <- GRanges(c("chr1:1-2",
                            "chr2:1-2",
                            "chr3:100000-100002",
                            "chr4:10000001-10000002"))

annotationsGenes <- GRanges(c("chr1:1-2",
                              "chr2:100000-100002",
                              "chr3:99999-100002",
                              "chr4:10000001-10000002"))
annotationsGenes$name=c("gen1","gen2","gen3","gen4")
seqlengths(annotationsEnh) <- seqlengths(annotationsGenes) <- rep(10000002,
                                                                  4)


annotations = GInteractions(annotationsEnh,annotationsGenes)


annotateGenomicRegions(genomicRegions,
                    annotations =annotations,
                    identified=T)
annotateGenomicRegions(genomicRegions,
                    annotations,
                    identified=F)

}
