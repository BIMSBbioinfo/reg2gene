% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/reg2gene_plotF.R
\name{plotGenomeInteractions}
\alias{plotGenomeInteractions}
\title{Plots enhancer-promoter interactions}
\usage{
plotGenomeInteractions(interactionData, range = NULL, selectGene = NULL,
  selectRegulatoryRegion = NULL, benchmarkData = NULL, statistics = NULL,
  coloring = NULL)
}
\arguments{
\item{interactionData}{A GInteractions object with anchor1 corresponding to 
regulatory region, and anchor2 to the TSS of a gene. Minimum meta-data is 
info about gene names store in column "name2".
This object can be produced by modelling [ \code{\link{associateReg2Gene}}], 
or meta-analysis [\code{\link{metaAssociations}}] or voting functions from 
reg2gene package.}

\item{range}{(default NULL) this object stores info about gene annotations.
If default, function retrieves automatically gene annotations based on
TxDb.Hsapiens.UCSC.hg19.knownGene package.
Otherwise, this argument corresponds to the range argument from
\code{\link[Gviz]{GeneRegionTrack}} which handles many different data input
types:  TxDb, GRanges, GRangesList,data.frame, character scala. In the case
you want to write your own documentation, for more details about this 
argument take a look at \code{\link[Gviz]{GeneRegionTrack}}.}

\item{selectGene}{(default NULL) a character vector of gene name symbols 
(eg "FTO","IRX3", etc.) which user wants to plot.}

\item{selectRegulatoryRegion}{(default NULL) GRanges object or a 
character vector which stores info about the region of interest which 
user wants to plot (format: "chr16:53112601-53114200"). This region does not
necessarilly need to be equal to the regulatory regions reported in the 
interactionData input objects, whereas it only needs to overlap some
regulatory regions}

\item{benchmarkData}{(default NULL) A GInteractions object or a list of
GInteractions objects storing info about interaction regions in the genome 
(for example, regions from the literature obtained using chromatin 
conformation capture related methods.}

\item{statistics}{(default NULL) Column name where info about the heights of 
loops is stored. If NULL, then all interaction loops have an equal height 
Otherwise, loops of different height are plotted based on the info stored in
the corresponding column, eg "pval" or "qval"}

\item{coloring}{(default NULL) Information about colors used to plot enhancer
promoter interactions. If it is NULL, then all interactions will be plotted
red. Otherwise, an ID of the column from interactionData object where info 
about color is stored. For example, interactions for different genes can be 
colored differently, or statistically significant/insignificant interactions
can be colored differently. User pre-defines this column by itself.}
}
\value{
Nice plot
}
\description{
Plots enhancer-promoter interactions
}
\details{
Plots InteractionTrack, GeneRegionTrack, AnnotationTrack, 
IdeogramTrack and GenomeAxisTrack for requested GInteractions object of
enhancer-gene associations

Take a look at the plot :-)
Gene annotations are retieved from TxDb.Hsapiens.UCSC.hg19.knownGene, and
exons are plotted (no info about transcript names is used). 
Entrez -> hgcn symbol are obtained using biomaRt.
}
\examples{
library(Gviz)
library(GenomicInteractions)
library(GenomicFeatures)

# Creating an example GInteractions set:

enhancers <- GRanges(rep("chr16",6),
                     IRanges(c(53112601,55531601,53777201,
                               53778801,54084001,53946467),
                             c(53114200,55533250, 53778800,
                               53780400, 54084400 ,53947933)))

genes <- GRanges(rep("chr16",6),
                 IRanges(c(53737874, 54964773, 54320676,
                           53737874, 54964773, 54320676),
                         c(53737874, 54964773, 54320676,
                           53737874, 54964773, 54320676)))

GenomeInteractions <- GInteractions(enhancers,genes)

GenomeInteractions$name2 <- c("FTO","IRX5","IRX3")

GenomeInteractions$pval <- c(0.20857403, 0.72856090, 0.03586015,
                             0.32663439, 0.32534945, 0.03994488)

GenomeInteractions$color <- c("red","blue","grey")

plotGenomeInteractions(interactionData = GenomeInteractions,
                 statistics ="pval",
                 coloring = "color")

# if no info about coloring and height of loops provided, all loops are equal
plotGenomeInteractions(interactionData = GenomeInteractions)
 
 # Specific gene can be individually plotted
 
 plotGenomeInteractions(interactionData = GenomeInteractions,
 selectGene = "FTO")
 
 # This should be equal to the example where genes are not selected
 
 plotGenomeInteractions(interactionData = GenomeInteractions,
                        selectGene = c("FTO","IRX3","IRX5"),
                        coloring = "color",
                        statistics = "pval")
                        
 # if one wants to plot regulatory region                       
 plotGenomeInteractions(interactionData = GenomeInteractions,
              selectRegulatoryRegion = "chr16:53112601-53114200")
 
 # and function plots not regulatory regions queried, but all that
 # are present in the interactionData and overlap that region
                            
 plotGenomeInteractions(interactionData = GenomeInteractions,
                        selectRegulatoryRegion = "chr16:53112601-53778800",
                        coloring = "color",
                        statistics = "pval")
                        
 # add bemchmark data
 
 plotGenomeInteractions(interactionData = GenomeInteractions, 
 coloring = "color", statistics = "pval",
 benchmarkData = GenomeInteractions[1:3])
 
  # add a list of bemchmark data  
   benchmarkData = list(GenomeInteractions[1:3],GenomeInteractions[4:5],
   GenomeInteractions[6])
   names(benchmarkData) <- c("Bench1","Bench2","Bench3")
  plotGenomeInteractions(interactionData = GenomeInteractions,
  coloring = "color",
  statistics = "pval",
  benchmarkData = benchmarkData)                     
                                                                      
}
\author{
Inga Patarcic
}
