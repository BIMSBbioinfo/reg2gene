% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/annotateDisease.R
\name{annotateRegionToTrait}
\alias{annotateRegionToTrait}
\title{Add associated traits to the interaction object}
\usage{
annotateRegionToTrait(interactionData, DisGeneDB, geneIDs = c("name2",
  "GeneName"), ...)
}
\arguments{
\item{interactionData}{A GInteractions object. It can be produced by 
modelling [ \code{\link{associateReg2Gene}}], or
meta-analysis [\code{\link{metaAssociations}}] or voting functions from 
reg2gene. It can be GInteractions object with only gene symbols as an 
additional meta-data. Important is that the
first element of input associating pair corresponds to regulatory region, 
whereas the second memeber corresponds to TSS/gene region.}

\item{DisGeneDB}{a data-table or GRanges object which stores info about 
gene-disease associations (in data table format) or variant-gene-disease 
associations (as a GRanges object where ranges correspond to variant 
location). For example DISGENET db or GWAS Catalog db can be used as an 
input for this function.}

\item{geneIDs}{character vector of length 2 which stores information
about column names where gene symbols are stored for both input objects. 
By default c("name2","GeneName")}
}
\value{
A GInteractions object (interactionData) with added meta-data
from the DisGeneDB object. Added info is presumably info about traits
associated with given genes or both variant-genes combination.
}
\description{
This function adds associated traits to the input interaction object. 
Traits are extracted from the object which stores either variant-gene-disease
associations of gene-disease associations. Traits are idenfied based on 
based on gene symbol overlap or or based on variant-genomic region overlap in
addition to the gene symbol overlap.
}
\details{
Function works with DisGeneDB object that can be either a
Granges object or dataframe storing info about gene~trait or
variant~gene~trait associations.
If input object is GRanges, then only variant (not gene) location should
be stored as a genomic ranges. In that case, function finds overlaps 
between anchor1 from GInteraction object and DisGeneDB genomic ranges
(presumably overlap between variant and regulatory regions), and in 
addition it identifies overlaps between genes from these two objects
based on gene symbols (stored in columns "name2","GeneName"). Thus,
only if gene symbols and genomic locations from both objects overlap
the function will return these entries.

If DisGeneDB stores info about gene~trait associations as a dataframe
(no info about variant location), then info about associated trait is
fetched only based on gene name overlap.
}
\examples{
[to do]

}
\author{
Inga Patarcic
}
\keyword{internal}
